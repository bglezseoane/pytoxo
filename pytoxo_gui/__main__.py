# -*- coding: utf-8 -*-

###########################################################
# PyToxo
#
# A Python tool to calculate penetrance tables for 
# high-order epistasis models
#
# Copyright 2021 Borja Gonz√°lez Seoane
#
# Contact: borja.gseoane@udc.es
###########################################################

"""Graphical user interface entry point."""

import base64
import io
import os
import platform
import subprocess
from typing import List

import PIL.Image

import pytoxo
import pytoxo.errors

# Detect the platform where the GUI is going to be used
detected_platform = platform.system()

"""PySimpleGUI imports Tk, and this fail if Tk is not correctly installed in 
the platform"""
try:
    import PySimpleGUI as sg
except ImportError:
    print(pytoxo.errors.GUIUnsupportedPlatformError(detected_platform).message)
    exit(1)

MAX_ORDER_SUPPORTED = 12  # The interface would need some fixes to support bigger orders
MAX_NUMERICAL_INPUT_LEN = 20
INFO_BANNER_MAX_MODEL_NAME_LEN = 18


class PyToxoContext:
    """Support container class to maintain the PyToxo stuff state during GUI
    main loop."""

    model = None  # Loaded PyToxo model
    order = 1  # Must be modified when a model is loaded. Before serves to control some workarounds with the GUI
    ptable = None  # When a penetrance table is calculated


# ####################### GUI DESIGN ######################
# Adapt some patches depending of the detected platform
if detected_platform == "Darwin":  # Mac OS
    window_general_font_dep_of_platform = ("", "13")
    state_ready_font_size_dep_of_platform = 15
    state_calculating_font_size_dep_of_platform = state_ready_font_size_dep_of_platform
    table_font_size_dep_of_platform = state_ready_font_size_dep_of_platform
    window_size_dep_of_platform = (650, 800)
    model_frame_size_y_dep_of_platform = 27
    """Modal windows are not supported on Mac OS, so this patch a used to 
    emulate them hiding and un-hiding the main window"""
    hide_windows_to_emulate_modal_dep_of_platform = True
    """With Mac OS the menu is located in the upper menu bar, and it is 
    sensitive to the theme that is being used in the system, so it is consulted
    below"""
    p = subprocess.Popen(
        "defaults read -g AppleInterfaceStyle", shell=True, stdout=subprocess.PIPE
    )
    output, _ = p.communicate()
    macos_current_theme = output.decode("UTF-8").strip()
    if macos_current_theme == "Dark":
        menu_text_color_dep_of_platform = "#ffffff"
    else:
        menu_text_color_dep_of_platform = "#000000"
elif detected_platform == "Linux":
    window_general_font_dep_of_platform = ("", "10")
    state_ready_font_size_dep_of_platform = 11
    state_calculating_font_size_dep_of_platform = state_ready_font_size_dep_of_platform
    table_font_size_dep_of_platform = state_ready_font_size_dep_of_platform
    window_size_dep_of_platform = (650, 780)
    model_frame_size_y_dep_of_platform = 27
    hide_windows_to_emulate_modal_dep_of_platform = False
    menu_text_color_dep_of_platform = "#000000"
elif detected_platform == "Windows":
    window_general_font_dep_of_platform = ("", "10")
    state_ready_font_size_dep_of_platform = 11
    state_calculating_font_size_dep_of_platform = state_ready_font_size_dep_of_platform
    table_font_size_dep_of_platform = state_ready_font_size_dep_of_platform
    window_size_dep_of_platform = (650, 780)
    model_frame_size_y_dep_of_platform = 24
    hide_windows_to_emulate_modal_dep_of_platform = False
    menu_text_color_dep_of_platform = "#000000"
else:
    raise pytoxo.errors.GUIUnsupportedPlatformError(detected_platform)

# Main style settings
pytoxo_main_color = "#044343"
sg.LOOK_AND_FEEL_TABLE["PyToxoTheme"] = {
    "BACKGROUND": "#4f7b7b",
    "TEXT": "#e4e4e4",
    "INPUT": "#ffffff",
    "TEXT_INPUT": "#e4e4e4",
    "SCROLL": "#045757",
    "BUTTON": ("#e4e4e4", pytoxo_main_color),
    "PROGRESS": ("#000000", "#000000"),
    "BORDER": 1,
    "SLIDER_DEPTH": 0,
    "PROGRESS_DEPTH": 0,
    "COLOR_LIST": ["#222222", pytoxo_main_color, "#045757", "#e4e4e4"],
    "DESCRIPTION": ["#000000", "Turquoise", "Grey", "Dark"],
}  # Custom window style for PyToxo
sg.LOOK_AND_FEEL_TABLE["PyToxoLightTheme"] = {
    "BACKGROUND": "#a7bdbd",
    "TEXT": pytoxo_main_color,
    "INPUT": "#ffffff",
    "TEXT_INPUT": "#e4e4e4",
    "SCROLL": "#045757",
    "BUTTON": ("#e4e4e4", pytoxo_main_color),
    "PROGRESS": ("#000000", "#000000"),
    "BORDER": 1,
    "SLIDER_DEPTH": 0,
    "PROGRESS_DEPTH": 0,
    "COLOR_LIST": ["#222222", pytoxo_main_color, "#045757", "#e4e4e4"],
    "DESCRIPTION": ["#000000", "Turquoise", "Grey", "Dark"],
}  # Custom window style for PyToxo, light alternative

# ########## THEME SELECTION ##########
# Uncomment desired style between:
# Dark style
sg.theme("PyToxoTheme")
disabled_text_color_dep_of_style = "#dbdbdb"
state_ready_color_dep_of_style = "#1bff1B"
state_calculating_color_dep_of_style = "#e59400"
logo_pytoxo_dep_of_style = ""
logo_udc_dep_of_style = ""
# # Light style
# sg.theme("PyToxoLightTheme")
# disabled_text_color_dep_of_style = "#656b6b"
# state_ready_color_dep_of_style = "#8cff19"
# state_calculating_color_dep_of_style = "#ee683b"
# logo_pytoxo_dep_of_style = ""
# logo_udc_dep_of_style = "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"
# #####################################

# Other style settings: fonts
window_general_font = window_general_font_dep_of_platform
table_font = ("Courier", table_font_size_dep_of_platform)
table_headers_font = window_general_font
state_ready_font = ("", state_ready_font_size_dep_of_platform, "bold")
state_calculating_font = ("", state_calculating_font_size_dep_of_platform, "bold")

# Other style settings: font colors
table_font_color = "#000000"
table_headers_font_color = "#ffffff"
text_inputs_text_color = "#000000"
state_ready_color = state_ready_color_dep_of_style
state_calculating_color = state_calculating_color_dep_of_style
disabled_text_color = disabled_text_color_dep_of_style

# Other style settings: background colors
table_background_color = "#ffffff"
table_alternating_background_color = "#d3d3d3"

# Other style settings: highlight colors
selection_colors = ("#000000", "#c6dffc")

# Tooltipis messages
tt_model_disabled_text = (
    "Use the menu to load a model from a file or enter one manually"
)
tt_prev_or_her_input_dis = "You need to have set the model before setting this"
tt_prev_or_her_input_en = "A probability value between 0 and 1"
tt_mafs_disabled_text = "You need to have set the model before setting MAFs"
tt_mafs_input = "The minor allele frequency, a value between 0 and 0.5"
tt_calculate_button_dis = "You need to have set all fields before calculating the table"
tt_calculate_button_en = "Calculate the table with the set configuration"

# Main menu
menu = sg.Menu(
    [
        [
            "File",
            ["Open model", "Close model and clean", "Save calculated table", "Exit"],
        ],
        # ["Edit", ["Paste", "Undo"]],  # TODO
        ["Help", "About PyToxo GUI"],
    ],
    text_color=menu_text_color_dep_of_platform,
)

# Logo preparation for the main window
logo = PIL.Image.open(io.BytesIO(base64.b64decode(logo_pytoxo_dep_of_style)))
logo_size_x, logo_size_y = logo.size
logo_new_size_x = 450
logo_new_size = (logo_new_size_x, (logo_size_y * logo_new_size_x) // logo_size_x)
logo = logo.resize(logo_new_size, PIL.Image.ANTIALIAS)
buffered = io.BytesIO()
logo.save(buffered, format="GIF")  # GIF is the best format for Tkinter
logo_b64 = base64.b64encode(buffered.getvalue())

# Logo preparation for the about pop-up
logo_popup_size_x = 300
logo_popup_size = (logo_popup_size_x, (logo_size_y * logo_popup_size_x) // logo_size_x)
logo = logo.resize(logo_popup_size, PIL.Image.ANTIALIAS)
buffered = io.BytesIO()
logo.save(buffered, format="GIF")  # GIF is the best format for Tkinter
logo_b64_popup = base64.b64encode(buffered.getvalue())

# UDC's logo preparation for the about pop-up
logo_udc = PIL.Image.open(io.BytesIO(base64.b64decode(logo_udc_dep_of_style)))
logo_udc_size_x, logo_udc_size_y = logo_udc.size
logo_udc_new_size_x = 300
logo_udc_new_size = (
    logo_udc_new_size_x,
    (logo_udc_size_y * logo_udc_new_size_x) // logo_udc_size_x,
)
logo_udc = logo_udc.resize(logo_udc_new_size, PIL.Image.ANTIALIAS)
buffered = io.BytesIO()
logo_udc.save(buffered, format="GIF")  # GIF is the best format for Tkinter
logo_udc_b64 = base64.b64encode(buffered.getvalue())

# Epistatic model table
headings = [
    "Genotype definition",
    "Penetrance expression",
    "Calculated penetrance",
]
empty_rows = [["" for col in range(len(headings))]]

# Model frame
model_frame_size_y = model_frame_size_y_dep_of_platform
model_frame = sg.Frame(
    key="-MODEL_FRAME-",
    title="Epistatic model",
    layout=[
        [
            sg.Table(
                key="-MODEL_TABLE-",
                headings=headings,
                values=empty_rows,
                enable_events=True,
                vertical_scroll_only=True,
                num_rows=model_frame_size_y - 1,  # Due to header row
                justification="center",
                display_row_numbers=True,
                hide_vertical_scroll=True,
                auto_size_columns=False,
                col_widths=[21] * len(headings),
                header_font=table_headers_font,
                header_text_color=table_headers_font_color,
                header_background_color=pytoxo_main_color,
                font=table_font,
                text_color=table_font_color,
                background_color=table_background_color,
                alternating_row_color=table_alternating_background_color,
                selected_row_colors=selection_colors,
            ),
        ]
    ],
    element_justification="center",
)

# Informative banner
info_banner_model_skeleton_text = "Model: {} (order {})"
info_banner_fixing_head_text = "Fixing: "
info_banner_maximizing_head_text = "Maximizing: "
info_banner_fixing_maximizing_options = ["prevalence", "heritability"]
info_banner_model_none_text = f"{info_banner_model_skeleton_text.format('none','none')}"
info_banner_fixing_none_text = f"{info_banner_fixing_head_text}none"
info_banner_maximizing_none_text = f"{info_banner_maximizing_head_text}none"
info_banner = [
    [
        sg.Text(
            info_banner_model_none_text,
            key="-INFO_MODEL-",
            size=(25, 1),
            text_color=disabled_text_color,
            justification="center",
        ),
        sg.Text(
            info_banner_fixing_none_text,
            key="-INFO_FIXING-",
            size=(20, 1),
            text_color=disabled_text_color,
            justification="center",
        ),
        sg.Text(
            info_banner_maximizing_none_text,
            key="-INFO_MAXIMIZING-",
            size=(25, 1),
            text_color=disabled_text_color,
            justification="center",
        ),
    ],
    sg.Text(
        "Ready",
        key="-INFO_STATE_READY-",
        visible=True,
        font=state_ready_font,
        text_color=state_ready_color,
        justification="center",
    ),
    sg.Text(
        "Calculating...",
        key="-INFO_STATE_CALCULATING-",
        visible=False,
        font=state_calculating_font,
        text_color=state_calculating_color,
        justification="center",
    ),
]

# Prevalence or heritability frame
prev_or_her_texts = ["Heritability", "Prevalence"]
prev_or_her_frame = sg.Frame(
    key="-PREV_OR_HER_FRAME-",
    title="Fix prevalence or heritability",
    layout=[
        [
            sg.Combo(
                prev_or_her_texts,
                key="-PREV_OR_HER_CB-",
                readonly=True,
                enable_events=True,  # To refresh the loop and can check filled fields
                size=(9, 1),
                text_color=text_inputs_text_color,
            ),
            sg.InputText(
                key="-PREV_OR_HER_INPUT-",
                disabled=True,  # Pending to be disabled when a model was loaded
                enable_events=True,  # To refresh the loop and can check filled fields
                tooltip=tt_prev_or_her_input_dis,
                size=(4, 1),
                text_color=text_inputs_text_color,
            ),
        ],
    ],
    element_justification="left",
)

# MAFs frame text entries
mafs_entries = []
for i in range(1, MAX_ORDER_SUPPORTED + 1):
    mafs_entries.append(
        sg.pin(  # To fix the entries in the layout, in horizontal
            sg.InputText(
                key=f"-MAFS_INPUT_{i}-",
                visible=False,  # Pending to be enabled when a model was loaded
                enable_events=True,  # To refresh the loop and can check filled fields
                tooltip=tt_mafs_input,
                size=(4, 1),
                pad=(1, 3),  # 3 seems to be the default
                text_color=text_inputs_text_color,
            )
        )
    )

# MAFs frame
mafs_frame = sg.Frame(
    key="-MAFS_FRAME-",
    title="MAFs",
    layout=[
        [
            sg.Text(
                "None model loaded",
                key="-MAFS_DISABLED_TEXT-",
                visible=True,  # Pending to be disabled when a model was loaded
                tooltip=tt_mafs_disabled_text,
                text_color=disabled_text_color,
            ),
        ]
        + mafs_entries
    ],
    element_justification="center",
)

# Available output formats
output_formats = ["GAMETES", "CSV"]

# Layout composition
layout = [
    [menu],
    [sg.Image(data=logo_b64, key="-LOGO-")],
    [model_frame],
    [info_banner],
    [prev_or_her_frame, mafs_frame],
    [
        sg.Button(
            "Calculate table",
            disabled=True,
            tooltip=tt_calculate_button_dis,
        ),
    ],
    [
        sg.Text("Save calculated table as"),
        sg.Combo(
            output_formats,
            key="-FORMATS_CB-",
            readonly=True,
            default_value=output_formats[0],
            size=(9, 1),
            text_color=text_inputs_text_color,
        ),
    ],
]

# Window composition
window = sg.Window(
    "PyToxo GUI",
    layout,
    font=window_general_font,
    finalize=True,
    size=window_size_dep_of_platform,
    element_justification="center",
)


# #########################################################


# ################## AUXILIARY FUNCTIONS ##################
def refresh_mafs_entries_to_check_keys(pytoxo_context: PyToxoContext) -> List[str]:
    """Auxiliary function to refresh contents used in several times within
    the GUI main loop."""
    return [f"-MAFS_INPUT_" f"{i}-" for i in range(1, pytoxo_context.order + 1)]


def refresh_text_entries_to_check_keys(
    mafs_entries_to_check_keys: List[str],
) -> List[str]:
    """Auxiliary function to refresh contents used in several times within
    the GUI main loop."""
    return ["-PREV_OR_HER_INPUT-"] + mafs_entries_to_check_keys


def refresh_text_entries_to_check_values(
    text_entries_to_check_keys: List[str], values: dict
) -> List[str]:
    """Auxiliary function to refresh contents used in several times within
    the GUI main loop."""
    return [values[k] for k in text_entries_to_check_keys]


def check_all_filled(
    window: sg.Window, values: dict, text_entries_to_check_values: List[str]
) -> bool:
    """Check current values state: if all configuration is filled, enable
    calculate button, else disable it. Also returns a bool about the all
    filled condition to add the possibility to reuse this function to a
    security check before try to calculate."""
    if (
        window["-MODEL_TABLE-"].visible
        and "" not in [values["-PREV_OR_HER_CB-"]] + text_entries_to_check_values
    ):
        window["Calculate table"].Update(disabled=False)
        window["Calculate table"].set_tooltip(tt_calculate_button_en)
        return True
    else:
        window["Calculate table"].Update(disabled=True)
        window["Calculate table"].set_tooltip(tt_calculate_button_dis)
        return False


def update_info_banner(window: sg.Window, key: str, *args: str) -> None:
    """Auxiliary function to update the informative banner. The different
    keys have different treatments. Supported keys are: `-INFO_MODEL-`,
    `-INFO_FIXING-`, `-INFO_MAXIMIZING-`, `-INFO_STATE_READY-`,
    `-INFO_STATE_CALCULATING-` and `CLEAN`. `CLEAN` key serves to clean the
    banner as default."""
    if key == "-INFO_MODEL-":
        if len(args[0]) > INFO_BANNER_MAX_MODEL_NAME_LEN:
            name = f"{args[0][:INFO_BANNER_MAX_MODEL_NAME_LEN-3]}..."
        else:
            name = args[0]
        window[key].Update(
            value=f"{info_banner_model_skeleton_text.format(name,args[1])}"
        )
    elif key == "-INFO_FIXING-":
        window[key].Update(value=f"{info_banner_fixing_head_text}{args[0]}")
    elif key == "-INFO_MAXIMIZING-":
        window[key].Update(value=f"{info_banner_maximizing_head_text}{args[0]}")
    elif key == "-INFO_STATE_READY-":
        window[key].Update(visible=True)
        window["-INFO_STATE_CALCULATING-"].Update(visible=False)
    elif key == "-INFO_STATE_CALCULATING-":
        window[key].Update(visible=True)
        window["-INFO_STATE_READY-"].Update(visible=False)
        window.refresh()  # Needed here because it does not go through the loop
    elif key == "CLEAN":
        window["-INFO_MODEL-"].Update(value=f"{info_banner_model_none_text}")
        window.refresh()  # Needed here because it does not go through the loop
    else:
        raise ValueError(key)


# #########################################################


# ##################### GUI EVENT LOOP ####################
def main():
    # Create PyToxo context object
    pytoxo_context = PyToxoContext()

    while True:
        event, values = window.read()

        # Check if exit event
        if event in ("Exit", sg.WIN_CLOSED, None):
            break

        # Load text items to check
        mafs_entries_to_check_keys = refresh_mafs_entries_to_check_keys(pytoxo_context)
        text_entries_to_check_keys = refresh_text_entries_to_check_keys(
            mafs_entries_to_check_keys
        )
        text_entries_to_check_values = refresh_text_entries_to_check_values(
            text_entries_to_check_keys, values
        )

        """Fix the input of illegal chars. In entry widgets, 
        only numerical values are allowed"""
        if pytoxo_context.model and values:
            for k in text_entries_to_check_keys:
                if len(values[k]) > 1 and (
                    values[k][-1] not in (".0123456789")  # Illegal chars
                    or (
                        "." in values[k][:-1] and values[k][-1] == "."
                    )  # Only one `.` in the entry
                    or len(values[k]) > MAX_NUMERICAL_INPUT_LEN  # Already too long
                ):
                    """Delete last char from input. The user perceives that
                    the keystroke is ignored"""
                    values[k] = values[k][:-1]
                    window[k].update(value=values[k])
                elif len(values[k]) == 1 and values[k] not in (
                    ".0123456789"
                ):  # Illegal chars
                    values[k] = ""
                    window[k].update(value=values[k])

            # Refresh text items to check
            mafs_entries_to_check_keys = refresh_mafs_entries_to_check_keys(
                pytoxo_context
            )
            text_entries_to_check_keys = refresh_text_entries_to_check_keys(
                mafs_entries_to_check_keys
            )
            text_entries_to_check_values = refresh_text_entries_to_check_values(
                text_entries_to_check_keys, values
            )

        # Beautify incomplete fields like `.2` instead of `0.2`
        if pytoxo_context.model and values:
            for k in text_entries_to_check_keys:
                if values[k] == "." and event != k:
                    # Fix `.`
                    values[k] = "0.0"
                    window[k].Update(value=values[k])
                elif values[k] != "" and event != k:
                    # Fix e.g. `00.1`, `0.4600000`, `1.` or `.23'
                    values[k] = str(float(values[k]))
                    window[k].update(value=values[k])

        # Check events
        if event == "Open model":
            filename = sg.popup_get_file(
                "Open model",
                no_window=True,  # To use a native approach
                file_types=(("Comma separated values", "*.csv"),),
                modal=True,  # Work in all platforms (native approach)
            )
            if not filename:
                continue  # The operation has been canceled
            try:
                # Load to the PyToxo context
                pytoxo_context.model = pytoxo.Model(filename)
                pytoxo_context.order = (
                    pytoxo_context.model.order
                )  # It is important to update also this

                # Print model in the GUI's table
                window["-MODEL_TABLE-"].Update(
                    values=[
                        [g, p]
                        for g, p in zip(
                            pytoxo_context.model.calculate_genotypes(),
                            pytoxo_context.model.penetrances,
                        )
                    ]
                )
                """Enable MAFs assuring to prevent from being enabled too 
                many when changing from a larger model to a smaller one. 
                Assure also that MAFs are all empty"""
                for i in range(1, pytoxo_context.model.order + 1):
                    values[f"-MAFS_INPUT_{i}-"] = ""
                    window[f"-MAFS_INPUT_{i}-"].Update(
                        value=values[f"-MAFS_INPUT_{i}-"]
                    )
                    window[f"-MAFS_INPUT_{i}-"].Update(visible=True)
                for i in range(pytoxo_context.model.order + 1, MAX_ORDER_SUPPORTED + 1):
                    window[f"-MAFS_INPUT_{i}-"].Update(visible=False)
                    values[f"-MAFS_INPUT_{i}-"] = ""
                    window[f"-MAFS_INPUT_{i}-"].Update(
                        value=values[f"-MAFS_INPUT_{i}-"]
                    )
                window["-MAFS_DISABLED_TEXT-"].Update(visible=False)

                # Enable prevalence or heritability entry
                """Note: actually this parameter is independent of the load 
                of the model. However, thus limiting the order of filling 
                fields, it is possible to validate this field with the validator
                of the model, which otherwise might not be available. It also
                makes the user better understand the order in which the 
                interface should be used."""
                window[f"-PREV_OR_HER_INPUT-"].Update(disabled=False)
                window["-PREV_OR_HER_INPUT-"].set_tooltip(tt_prev_or_her_input_en)

                # Update informative banner
                update_info_banner(
                    window,
                    "-INFO_MODEL-",
                    pytoxo_context.model.name,
                    str(pytoxo_context.order),
                )

                # Refresh text items to check
                mafs_entries_to_check_keys = refresh_mafs_entries_to_check_keys(
                    pytoxo_context
                )
                text_entries_to_check_keys = refresh_text_entries_to_check_keys(
                    mafs_entries_to_check_keys
                )
                text_entries_to_check_values = refresh_text_entries_to_check_values(
                    text_entries_to_check_keys, values
                )
            except pytoxo.errors.BadFormedModelError:
                if hide_windows_to_emulate_modal_dep_of_platform:
                    window.Hide()
                sg.popup_ok(
                    "The file contains a bad formed model. PyToxo cannot "
                    "interpret it. Revise PyToxo's file format requirements.",
                    title="File parsing error",
                    modal=True,
                    font=window_general_font,
                )
                if hide_windows_to_emulate_modal_dep_of_platform:
                    window.UnHide()
            except IOError:
                if hide_windows_to_emulate_modal_dep_of_platform:
                    window.Hide()
                sg.popup_ok(
                    f"Error trying to open '{filename}'.",
                    title="File opening error",
                    modal=True,
                    font=window_general_font,
                )
                if hide_windows_to_emulate_modal_dep_of_platform:
                    window.UnHide()

        elif event == "Close model and clean":
            # Load to the PyToxo context
            pytoxo_context = PyToxoContext()  # Refresh with a new instance

            # Remove the previous model from the GUI
            window["-MODEL_TABLE-"].Update(values=empty_rows)

            # Disable MAFs and clean values
            for k in mafs_entries_to_check_keys:
                window[k].Update(visible=False)
                values[k] = ""
                window[k].Update(value=values[k])
            window["-MAFS_DISABLED_TEXT-"].Update(visible=True)

            # Disable prevalence or heritability entry and clean values
            """Note: actually this parameter is independent of the load 
            of the model. However, thus limiting the order of filling 
            fields, it is possible to validate this field with the validator
            of the model, which otherwise might not be available. It also
            makes the user better understand the order in which the 
            interface should be used."""
            values[f"-PREV_OR_HER_CB-"] = ""
            window[f"-PREV_OR_HER_CB-"].Update(value=values[f"-PREV_OR_HER_CB-"])
            window[f"-PREV_OR_HER_INPUT-"].Update(disabled=True)
            window["-PREV_OR_HER_INPUT-"].set_tooltip(tt_prev_or_her_input_dis)
            values[f"-PREV_OR_HER_INPUT-"] = ""
            window[f"-PREV_OR_HER_INPUT-"].Update(value=values[f"-PREV_OR_HER_INPUT-"])

            # Update informative banner
            update_info_banner(window, "CLEAN")  # Clean all model related

            # Refresh text items to check
            mafs_entries_to_check_keys = refresh_mafs_entries_to_check_keys(
                pytoxo_context
            )
            text_entries_to_check_keys = refresh_text_entries_to_check_keys(
                mafs_entries_to_check_keys
            )
            text_entries_to_check_values = refresh_text_entries_to_check_values(
                text_entries_to_check_keys, values
            )

        elif event == "Save calculated table":
            if not pytoxo_context.ptable:
                if hide_windows_to_emulate_modal_dep_of_platform:
                    window.Hide()
                sg.popup_ok(
                    f"There is not a calculated penetrance table. Calculate "
                    f"the table before trying to save it.",
                    title="No penetrance table",
                    modal=True,
                    font=window_general_font,
                )
                if hide_windows_to_emulate_modal_dep_of_platform:
                    window.UnHide()
            else:
                # Get configured output format
                output_format = values["-FORMATS_CB-"].lower()
                # Calculate default output file extension attending to output format
                if output_format == "gametes":
                    output_default_extension = ".txt"
                else:
                    output_default_extension = ".csv"

                filename = sg.popup_get_file(
                    "Save calculated table",
                    save_as=True,
                    default_extension=output_default_extension,
                    no_window=True,  # To use a native approach
                    modal=True,  # Work in all platforms (native approach)
                )
                if not filename:
                    continue  # The operation has been canceled
                else:
                    try:
                        pytoxo_context.ptable.write_to_file(
                            filename=filename, overwrite=True, format=output_format
                        )
                    except pytoxo.errors.GenericCalculationError as e:  # Improvable exception
                        # Format error message
                        msg = e.__str__()
                        if not msg.endswith("."):
                            msg = f"{e}."

                        if hide_windows_to_emulate_modal_dep_of_platform:
                            window.Hide()
                        sg.popup_ok(
                            f"{msg} Revise this field.",
                            title="Saving error",
                            modal=True,
                            font=window_general_font,
                        )
                        if hide_windows_to_emulate_modal_dep_of_platform:
                            window.UnHide()

        elif event == "-MODEL_TABLE-":
            # Intercept the event to refresh window when click on the table
            pass

        elif event == "-PREV_OR_HER_CB-" and values[event] != "":
            # Update informative banner
            fixed_prev_or_her = values[event].lower()
            if fixed_prev_or_her == info_banner_fixing_maximizing_options[0]:
                maximized_prev_or_her = info_banner_fixing_maximizing_options[1]
            else:
                maximized_prev_or_her = info_banner_fixing_maximizing_options[0]
            update_info_banner(window, "-INFO_FIXING-", fixed_prev_or_her)
            update_info_banner(window, "-INFO_MAXIMIZING-", maximized_prev_or_her)

        elif (
            event == "-PREV_OR_HER_INPUT-"
            and values[event] != ""
            and values[event]
            != "."  # The user is already writing, or it will solved in the next interaction
        ):
            """Check input is valid using 'Model' check function. At the
            final of this loop is checked what fields are filled to update
            the GUI in consonance"""
            try:
                pytoxo_context.model.check_find_table_parameters(
                    # Simply a valid value to validate th other ignoring this
                    mafs=[0.0] * pytoxo_context.model.order,
                    h_or_p=float(
                        values[event]
                    ),  # Try cast because actually is a string
                )
            except ValueError as e:
                # Format error message
                msg = e.__str__()
                if not msg.endswith("."):
                    msg = f"{e}."

                if hide_windows_to_emulate_modal_dep_of_platform:
                    window.Hide()
                sg.popup_ok(
                    f"{msg} Revise this field.",
                    title="Input configuration validation error",
                    modal=True,
                    font=window_general_font,
                )
                if hide_windows_to_emulate_modal_dep_of_platform:
                    window.UnHide()

                # Remove value
                window[event].Update(value="")

        elif (
            event.startswith("-MAFS_INPUT_")
            and values[event] != ""
            and values[event]
            != "."  # The user is already writing, or it will solved in the next interaction
        ):
            """Check input is valid using 'Model' check function. At the
            final of this loop is checked what fields are filled to update
            the GUI in consonance"""
            try:
                pytoxo_context.model.check_find_table_parameters(
                    mafs=[float(values[event])]
                    * pytoxo_context.model.order,  # Try cast because actually is a string
                    h_or_p=0.0,  # Simply a valid value to validate th other ignoring this
                )
            except ValueError as e:
                # Format error message
                msg = e.__str__()
                if not msg.endswith("."):
                    msg = f"{e}."

                if hide_windows_to_emulate_modal_dep_of_platform:
                    window.Hide()
                sg.popup_ok(
                    f"{msg} Revise this field.",
                    title="Input configuration validation error",
                    modal=True,
                    font=window_general_font,
                )
                if hide_windows_to_emulate_modal_dep_of_platform:
                    window.UnHide()

                # Remove value
                window[event].Update(value="")

        elif event == "Calculate table":
            """Security check to avoid some stranger cases playing with the
            input fields"""
            if check_all_filled(window, values, text_entries_to_check_values):
                input_mafs = []
                for k in mafs_entries_to_check_keys:
                    input_mafs.append(float(values[k]))

                # Update informative banner
                update_info_banner(window, "-INFO_STATE_CALCULATING-")
                try:
                    if values["-PREV_OR_HER_CB-"] == "Heritability":
                        ptable = pytoxo_context.model.find_max_prevalence_table(
                            mafs=input_mafs, h=float(values["-PREV_OR_HER_INPUT-"])
                        )
                    elif values["-PREV_OR_HER_CB-"] == "Prevalence":
                        ptable = pytoxo_context.model.find_max_heritability_table(
                            mafs=input_mafs, p=float(values["-PREV_OR_HER_INPUT-"])
                        )

                    # Load the table to the PyToxo context
                    # noinspection PyUnboundLocalVariable
                    pytoxo_context.ptable = ptable

                    # Print generated penetrance table in the GUI's table
                    # noinspection PyUnboundLocalVariable
                    window["-MODEL_TABLE-"].Update(
                        values=[
                            [g, p, pen]
                            for g, p, pen in zip(
                                pytoxo_context.model.calculate_genotypes(),
                                pytoxo_context.model.penetrances,
                                ptable.penetrance_values,
                            )
                        ]
                    )
                except pytoxo.errors.ResolutionError as e:
                    if hide_windows_to_emulate_modal_dep_of_platform:
                        window.Hide()
                    sg.popup_ok(
                        e.message,
                        title="Resolution error",
                        modal=True,
                        font=window_general_font,
                    )
                    if hide_windows_to_emulate_modal_dep_of_platform:
                        window.UnHide()
                except pytoxo.errors.UnsolvableModelError as e:
                    if hide_windows_to_emulate_modal_dep_of_platform:
                        window.Hide()
                    sg.popup_ok(
                        e.message,
                        title="Unsolvable model error",
                        modal=True,
                        font=window_general_font,
                    )
                    if hide_windows_to_emulate_modal_dep_of_platform:
                        window.UnHide()
                except ValueError as e:
                    if hide_windows_to_emulate_modal_dep_of_platform:
                        window.Hide()
                    sg.popup_ok(
                        f"{e} Check input parameters.",
                        title="Input configuration validation error",
                        modal=True,
                        font=window_general_font,
                    )
                    if hide_windows_to_emulate_modal_dep_of_platform:
                        window.UnHide()
                finally:
                    # Update informative banner
                    update_info_banner(window, "-INFO_STATE_READY-")

        elif event == "About PyToxo GUI":
            """This patch is to emulate window modal behaviour on Mac OS. In
            Linux and Windows, this is innocuous, because the "about" window is
            modal and the main window will be unresponsive still close the other
            one. In Mac OS, modal windows are not supported, and previously
            approach used with popups does not work here. It is also not
            possible to use popups here, because they do not admit a layout.
            So, with this patch, at least is limited the opnening of several
            "about" windows in all platforms. In Mac OS still will be
            possible to use the main window with the "about" window opened, but
            it is not very important"""
            try:
                # In Mac OS, hide and unhide works, focus doesn't work
                # noinspection PyUnboundLocalVariable
                about_popup.Hide()
                about_popup.UnHide()
            except:
                about_popup = sg.Window(
                    "About PyToxo GUI",
                    layout=[
                        [
                            sg.Text(
                                "PyToxo GUI\nA graphical user interface for "
                                "PyToxo\n",
                                justification="center",
                            )
                        ],
                        [sg.Image(data=logo_b64_popup)],
                        [
                            sg.Text(
                                "PyToxo\nA Python library for "
                                "calculating penetrance tables of any "
                                "bivariate epistasis model\n\nCopyright 2021 Borja "
                                "Gonz√°lez Seoane\nUniversity of A Coru√±a\nContact: "
                                "borja.gseoane@udc.es",
                                justification="center",
                            )
                        ],
                        [sg.Image(data=logo_udc_b64)],
                    ],
                    font=window_general_font,
                    finalize=True,
                    modal=True,
                    element_justification="center",
                )

        # Finally, check if all is filled before go to the next interaction
        check_all_filled(window, values, text_entries_to_check_values)

    window.close()


# #########################################################


if __name__ == "__main__":
    main()
